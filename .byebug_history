continue
area_map [{geometry: {type: "Polygon", coordinates: [DigsiteInfo.find(589).polygon]}, label: "Hello", tooltip: "World"}]
continue
Rails.application.credentials.config
Rails.application.credentials
continue
exit
ENV['MAPBOX_ACCESS_TOKEN']
continue
object.map {|element|                 [
                    State: element.state,
                    County: element.county,
                    Place: element.place,
                    Prefix: element.prefix,
                    Name: element.name,
                    Type: element.dig_type,
                    Suffix: element.suffix
                ]}
object.map {|element|                 [
                    State: element.state,
                    County: element.county,
                    Place: element.place,
                    Prefix: element.prefix,
                    Name: element.name,
                    Type: element.dig_type,
                    Suffix: element.suffix
                ]
object.size
object
continue
ticket = Ticket.create(id: Faker::Number.within(range: 1..1000), ticket_dates_id: ticket_dates.id, service_areas_id: service_area.id, excavator_id: excavator.id, excavation_info_id: excavation_info.id)
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000), type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_infos_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersections_id: intersection.id)
Itoi.all
exit
Itoi.all
intersection = Intersection.create(id: Faker::Number.within(range: 1..1000) , itoi_ids: [itoi.id, extra_itoi.id])
.save!
Itoi.all
Intersection.all
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersections_id: intersection.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_ids: intersection.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
DigsiteInfo
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
DigsiteInfo
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
.save!
NearStreet.all
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
.save!
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
DigsiteInfo.all
FieldContact.all
Excavator.all
AdressDigsite.all
StreetDigsite.all
AdressInfo.all
NearStreet.all
Itoi.all
Intersection.all
DigsiteInfo.all
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000) , type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_infos_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
continue
digsite_info.id
digsite_ingo.id
digsite_ingo.if
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
excavation_info
excavation_info.id
Faker::Number.within(range: 1..1000)
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000) , type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_infos_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
ExcavationInfo
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000) , type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
additional_service_area = AdditionalServiceAreaCode.create(id: Faker::Number.within(range: 1..1000), sa_code: ["ZZ0918"])
primary_service_area = PrimaryServiceAreaCode.create(id: Faker::Number.within(range: 1..1000), sa_code: "ZZ0918")
service_area = ServiceArea.create(id: Faker::Number.within(range: 1..1000), primary_service_area_codes_id: primary_service_area.id, additional_service_area_codes_id: additional_service_area.id)
ticket_dates = TicketDates.create(id: Faker::Number.within(range: 1..1000), response_due_date_time: DateTime.new, transmission_date_time: DateTime.new, legal_date_time: DateTime.new, request_taken_date_time: DateTime.new, restake_date: DateTime.new, expiration_date: DateTime.new, lpm_metting_accept_due_date: DateTime.new, overhead_begin_date: DateTime.new, overhead_end_date: DateTime.new)
contact = Contact.create(id: Faker::Number.within(range: 1..1000), name: "John Doe", phone: "1115552345", email: "example@example.com")
field_contact = FieldContact.create(id: Faker::Number.within(range: 1..1000), name: "Field Contact", phone: "1235557924", email: "example@example.com")
excavator = Excavator.create(id: Faker::Number.within(range: 1..1000), contacts_id: contact.id, field_contacts_id: field_contact.id, company_name: "John Doe CONSTRUCTION", address: "555 Some RD", city: "SOME PARK", state: "ZZ", zip: "55555", crew_on_site: true, type: "Excavator")
adress = AdressDigsite.create(id: Faker::Number.within(range: 1..1000), adress_num: ["Adress 1", "Adress 2"])
street = StreetDigsite.create(id: Faker::Number.within(range: 1..1000), prefix: "", name: "Trinity", dig_type: "Ave", suffix: "SW")
adress_info = AdressInfo.create(id: Faker::Number.within(range: 1..1000), state: "ST", county: "COUNTY", place: "PLACE", zip: "", adress_digsite_id: adress.id, street_digsite_id: street.id)
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "")
itoi = Itoi.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "FULERTON", place: "NORCROSS", prefix: "", name: "London", dig_type: "St", suffix: "SW")
extra_itoi = Itoi.create(id: itoi.id+2, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW")
intersection = Intersection.create(id: itoi.id, itoi_ids: [itoi.id, extra_itoi.id])
extra_itoi = Itoi.create(id: itoi.id+2, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW").save!
intersection = Intersection.create(id: itoi.id, itoi_ids: [itoi.id, extra_itoi.id])
extra_itoi = Itoi.create(id: itoi.id+2, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW").save!
itoi = Itoi.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "FULERTON", place: "NORCROSS", prefix: "", name: "London", dig_type: "St", suffix: "SW").save!
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "").save!
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "")
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id).save!
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
DigsiteInfo.all
ExcavationInfo.all
excavation_info = ExcavationInfo.create(id: 1111, type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
excavation_info = ExcavationInfo.create(id: 1111, type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
excavation_info = ExcavationInfo.create(id: rand(99)+1, type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "")
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id).save
DigsiteInfo.all
DigsiteInfo
excavation_info = ExcavationInfo.create(id: rand(99)+1, type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000)+1, type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000), type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "")
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "").save!
near_street = NearStreet.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "SomeCounty", place: "City", prefix: "", name: "", dig_type: "", suffix: "")
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id).save!
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000), type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
intersection = Intersection.create(id: itoi.id, itoi_ids: [itoi.id, extra_itoi.id])
extra_itoi = Itoi.create(id: itoi.id+2, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW")
extra_itoi = Itoi.create(id: itoi.id+1, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW")
itoi = Itoi.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "FULERTON", place: "NORCROSS", prefix: "", name: "London", dig_type: "St", suffix: "SW")
itoi
extra_itoi = Itoi.create(id: itoi.id+1, state: "ZZ", county: "COUNTY", place: "ATLANTA", prefix: "", name: "Jefferson", dig_type: "Ave", suffix: "SW")
itoi = Itoi.create(id: Faker::Number.within(range: 1..1000), state: "XX", county: "FULERTON", place: "NORCROSS", prefix: "", name: "London", dig_type: "St", suffix: "SW").save!
intersection = Intersection.create(id: Faker::Number.within(range: 1..1000), itoi_ids: [itoi.id, extra_itoi.id]).save!
intersection = Intersection.create(id: Faker::Number.within(range: 1..1000), itoi_ids: [itoi.id, extra_itoi.id]).save
Intersection.all
intersection
DigsiteInfo.all
excavation_info = ExcavationInfo.create(id: Faker::Number.within(range: 1..1000), type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info
digsite_info = DigsiteInfo.create(id: Faker::Number.within(range: 1..1000), look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
digsite_info.id
digsite_info
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
intersection
extra_itoi
itoi
near_street
adress_info
exit
AdressInfo.new
AdressDigsite.all
StreetDigsite.all
adress_info = AdressInfo.create(, state: "ST", county: "COUNTY", place: "PLACE", zip: "", adress_digsites_id: adress.id, street_digsites_id: street.id).save!
adress_info = AdressInfo.create(, state: "ST", county: "COUNTY", place: "PLACE", zip: "", adress_digsites_id: adress.id, street_digsites_id: street.id)
street = StreetDigsite.create(, prefix: "", name: "Trinity", dig_type: "Ave", suffix: "SW")
adress = AdressDigsite.create(adress_num: ["Adress 1", "Adress 2"])
adress_info = AdressInfo.create(, state: "ST", county: "COUNTY", place: "PLACE", zip: "", adress_digsites_id: adress.id, street_digsites_id: street.id).save!
adress_info = AdressInfo.create(, state: "ST", county: "COUNTY", place: "PLACE", zip: "", adress_digsites_id: adress.id, street_digsites_id: street.id)
AdressInfo.all
NearStreet.all
NearStreet
AdressInfo.all
StreetDigsite.all
AdressDigsite.all
AdressDigsite
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
Intersection.all
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
DigsiteInfo.all
DigsiteInfos.all
DigsiteInfo.all
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
DigsiteInfo.all
DigsiteInfo
ExcavationInfo
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
ExcavationInfo.first.digsite_info_id
ExcavationInfo.digsite_info_id
ExcavationInfo
digsite_info
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
ExcavationInfo.digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
ExcavationInfo.new
ExcavationInfo
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
exit
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
excavation_info
digsite_info.id
digsite_info
ExcavationInfo
DigsiteInfo
ExcavationInfo
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info.id
digsite_info
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
ExcavationInfo
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
digsite_info
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
exit
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
intersection
digsite_info
digsite_info.id
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
digsite_info.id
digsite_info_id
ExcavationInfo
excavation_info = ExcavationInfo.create(type_of_work: "rpr man hole tops", work_done_for: "gpc", project_duration: "60 days", project_start_date: DateTime.new, explosives: "No", under_ground_over_head: "Underground", horizontal_boring: "Road, Driveway and Sidewalk", white_lined: "No", locate_instructions: "locate along the r/o/w on both sides of the rd - including the rd itself - from inter to inter", remarks: "", digsite_info_id: digsite_info.id)
digsite_info = DigsiteInfo.create(look_up_by: "MANUAL", location_type: "Multiple Address", subdivision: "", adress_info_id: adress_info.id, near_streets_id: near_street.id, intersection_id: intersection.id)
continue
adress = AdressDigsite.create(adress_num: ["Adress 1", "Adress 2"])
continue
exit
object
continue
ticket = Ticket.create(ticket_dates_id: ticket_dates.id, service_areas_id: service_area.id)
excavator = Excavator.create(contacts_id: contact.id, field_contacts_id: field_contact.id, company_name: "John Doe CONSTRUCTION", address: "555 Some RD", city: "SOME PARK", state: "ZZ", zip: "55555", crew_on_site: true, type: "Excavator")
field_contact = FieldContact.create(name: "Field Contact", phone: "1235557924", email: "example@example.com")
excavator = Excavator.create(contacts_id: contact.id, company_name: "John Doe CONSTRUCTION", address: "555 Some RD", city: "SOME PARK", state: "ZZ", zip: "55555", crew_on_site: true, type: "Excavator")
field_contact.id
field_contact
excavator = Excavator.create(contacts_id: contact.id, field_contacts_id: field_contact.id, company_name: "John Doe CONSTRUCTION", address: "555 Some RD", city: "SOME PARK", state: "ZZ", zip: "55555", crew_on_site: true, type: "Excavator")
exit
continue
continur
primary_service_area
service_area = ServiceArea.create(primary_service_area_codes_id: primary_service_area.id, additional_service_area_codes_id: additional_service_area.id)
continue
                primaryRepository = ::Contexts::PrimaryServiceAreaCodes::Repository.new
                additionalRepository = ::Contexts::AdditionalServiceAreaCodes::Repository.new
continue
                if id.eql? nil
                    return {}
                end
id
continue
::Contexts::ServiceAreas::Repository
exit
::Contexts::ServiceAreas::Repository
Contexts::ServiceAreas::Repository
